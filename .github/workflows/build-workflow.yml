name: Build base workflow

on:
  workflow_call:
    inputs:
      architectures:
        description: 'The architectures to build for'
        required: true
        type: string
      dev_tag:
        description: 'The docker tag for the dev image'
        type: string
        default: 'dev'
    secrets:
      DOCKER_USERNAME:
        description: 'Docker Hub username'
        required: true
      DOCKER_PASSWORD:
        description: 'Docker Hub password'
        required: true

jobs:
  build-job:
    name: Build ${{ github.ref_name }}

    if: contains(github.event.head_commit.message, '[skip ci]') == false

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Generate build metadata
        run: |
          pnpm build:metadata
          cat ./client/buildMetadata.json

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: mauriceo/viewtube
          tags: |
            type=raw,value=${{ inputs.dev_tag }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.architectures }}
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=mauriceo/viewtube:dev
          cache-to: type=inline
